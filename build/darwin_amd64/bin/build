#!/usr/bin/env bash

DEPOT_TOOLS_REPO="https://chromium.googlesource.com/chromium/tools/depot_tools.git"
HOST_ARCH=x64
TARGET_ARCH=x64

ROOT="$(cd "$(dirname "$BASH_SOURCE")/.."; pwd)"
INCLUDE_DIR=$ROOT/include
LIB_DIR=$ROOT/lib
SRC_DIR=$ROOT/src

. $ROOT/../common/config.sh

export BUILD_OS="$(go env GOOS)"
export BUILD_ARCH="$(go env GOARCH)"
export GYP_GENERATORS="ninja"
export GYP_DEFINES="host_arch=$HOST_ARCH target_arch=$TARGET_ARCH"
export PATH="$SRC_DIR/depot_tools:$PATH"

function force_copy_headers {
  rm -rf $INCLUDE_DIR/.done
}

function force_copy_library {
  rm -rf $LIB_DIR/.done
}

set -e

# GET depot_tools
if [ ! -f $SRC_DIR/.done-depot_tools ]; then
  rm -rf $SRC_DIR/depot_tools
  mkdir -p $SRC_DIR
  cd $SRC_DIR
  git clone ${DEPOT_TOOLS_REPO} depot_tools
  find ./depot_tools -type d -name .git -exec bash -c 'echo "* -text" > {}/info/attributes' \;

  force_copy_headers
  force_copy_library

  touch $SRC_DIR/.done-depot_tools
fi

# GET webrtc
if [ ! -f $SRC_DIR/.done-libwebrtc ]; then
  rm -rf $SRC_DIR/libwebrtc
  mkdir -p $SRC_DIR/libwebrtc
  cd $SRC_DIR/libwebrtc
  gclient config ${LIB_WEBRTC_REPO}
  gclient sync -f -n -D -j1 -r${LIBWEBRTC_REVISION}
  find . -type d -name .git -exec bash -c 'echo "* -text" > {}/info/attributes' \;
  gclient runhooks -j1
  ninja -C trunk/out/Release

  force_copy_headers
  force_copy_library

  touch $SRC_DIR/.done-libwebrtc
fi

# Copy Headers
if [ ! -f $INCLUDE_DIR/.done ]; then
  rm -rf $INCLUDE_DIR
  cd $SRC_DIR/libwebrtc/trunk
  for h in $(find . -type f -name '*.h')
  do
    mkdir -p "$INCLUDE_DIR/$(dirname $h)"
    cp $h "$INCLUDE_DIR/$h"
  done

  touch $INCLUDE_DIR/.done
fi

# Merge archives
if [ ! -f $LIB_DIR/.done ]; then
  rm -rf $LIB_DIR
  mkdir -p $LIB_DIR
  cd $SRC_DIR/libwebrtc/trunk/out/Release

  libtool -static -o $LIB_DIR/libwebrtc-part0.a \
    libaudio_coding_module.a \
    libaudio_conference_mixer.a \
    libaudio_device.a \
    libaudio_processing.a \
    libaudio_processing_sse2.a \
    libaudioproc_debug_proto.a \
    libbitrate_controller.a \
    libCNG.a \
    libcommon_audio.a \
    libcommon_audio_sse2.a \
    libcommon_video.a \
    libcrnspr.a \
    libcrnss.a \
    libcrssl.a \
    libexpat.a \
    libG711.a \
    libG722.a \
    libicudata.a \
    libicui18n.a \
    libicuuc.a \
    libiLBC.a \
    libiSAC.a \

  libtool -static -o $LIB_DIR/libwebrtc-part1.a \
    libjingle.a \
    libjingle_media.a \

  libtool -static -o $LIB_DIR/libwebrtc-part2.a \
    libjingle_p2p.a \

  libtool -static -o $LIB_DIR/libwebrtc-part3.a \
    libjingle_peerconnection.a \
    libjpeg_turbo.a \
    libmedia_file.a \
    libNetEq4.a \
    libnss_static.a \

  libtool -static -o $LIB_DIR/libwebrtc-part4.a \
    libopus.a \
    libpaced_sender.a \
    libPCM16B.a \
    libprotobuf_lite.a \
    librbe_components.a \
    libremote_bitrate_estimator.a \
    librtp_rtcp.a \
    libsqlite3.a \
    libsrtp.a \
    libsystem_wrappers.a \
    libusrsctplib.a \
    libvideo_capture_module.a \

  libtool -static -o $LIB_DIR/libwebrtc-part5.a \
    libvideo_coding_utility.a \
    libvideo_engine_core.a \
    libvideo_processing.a \
    libvideo_processing_sse2.a \
    libvideo_render_module.a \
    libvoice_engine.a \
    libvpx.a \
    libvpx_intrinsics_mmx.a \
    libvpx_intrinsics_sse2.a \
    libvpx_intrinsics_ssse3.a \
    libwebrtc_i420.a \
    libwebrtc_opus.a \
    libwebrtc_utility.a \
    libwebrtc_video_coding.a \
    libwebrtc_vp8.a \
    libyuv.a \


  touch $LIB_DIR/.done
fi
